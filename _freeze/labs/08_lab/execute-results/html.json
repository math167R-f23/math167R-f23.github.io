{
  "hash": "b5451f8ca7882f4a97701fa2a79b31a6",
  "result": {
    "markdown": "---\ntitle: \"Lab 7\"\nauthor: \"YOUR NAME HERE\"\ndate: \"2023-10-18\"\nformat: \n  html:\n    embed-resources: true\n    code-tools: true\n    code-summary: \"Code\"\n---\n\n\nRemember, you must submit *both* your .Rmd and the compiled .html in order to receive full credit! In addition, to receive full credit, your code output and plots must be correctly formatted.\n\n### Collaborators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LOAD ANY RELEVANT PACKAGES HERE\n```\n:::\n\n\n## A. One-dimensional random walks\n\n1. In this part, you will simulate a one-dimensional random walk. Suppose you are at the point $x$ at time $t$. At time $t+1$, you have a 50% chance of moving forwards to $x+1$ and a 50% chance of moving backwards to $x-1$. Assume that at time $t=0$, you are at $x_0=0$.\n\n2. Write a function `random_walk()` that takes as input a single numeric $n$ and simulates $n$ steps of a one-dimensional random walk. The output should be a length vector of length $n+1$ starting with 0 where the $(i+1)$th entry represents the location of the random walker at time $t=i$. For example, `random_walk(5)` may return the vector $(0, 1, 2, 1, 2)$.\n\n3. Use your function to generate a random walk of 100 steps and generate a line graph with $t=0,1,\\ldots, 100$ on the x-axis and $x_0,\\ldots, x_{100}$ on the y-axis.\n\n\n## B. Writing a simulation.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}